Pd 6
##################
We transformed this procedure from TPC-DS benchmark query# 6. We included a loop region to create this procedure.
######################################
# i = 1982, k = 2001
# mon = 1
# ratio= 1.2
# min = 10
#########################


CREATE PROCEDURE PD_2(
						IN INT i, 
						IN INT k, 
						IN INT mon, 
						IN FLOAT ratio, 
						IN INT min)
AS BEGIN
	
	DECLARE n INT := i;
	
	v_t = 
				SELECT 
						a.ca_state state, 
						count(*) cnt 
				FROM 
						customer_address a, 
						customer c, 
						store_sales s, 
						date_dim d, 
						item i 
				WHERE 
						a.ca_address_sk = c.c_current_addr_sk AND 
						c.c_customer_sk = s.ss_customer_sk AND 
						s.ss_sold_date_sk = d.d_date_sk AND 
						s.ss_item_sk = i.i_item_sk AND 
						d.d_month_seq = (
											SELECT 
													DISTINCT (d_month_seq) 
											FROM 
													date_dim 
											WHERE 
													d_year = i AND 
													d_moy = mon) AND 
						i.i_current_price > ratio * (
														SELECT 
																avg(j.i_current_price) 
														FROM 
																item j 
														WHERE j.i_category = i.i_category) 
				GROUP BY 
						a.ca_state 
				HAVING 
						count(*) >= min 
				ORDER BY 
						cnt, 
						a.ca_state;
	
	
	WHILE i < k DO
		
		v_t = 
				SELECT 
						* 
				FROM
						v_t
						
				UNION ALL
				
				(SELECT 
						a.ca_state state, 
						count(*) cnt 
				FROM 
						customer_address a, 
						customer c, 
						store_sales s, 
						date_dim d, 
						item i 
				WHERE 
						a.ca_address_sk = c.c_current_addr_sk AND 
						c.c_customer_sk = s.ss_customer_sk AND 
						s.ss_sold_date_sk = d.d_date_sk AND 
						s.ss_item_sk = i.i_item_sk AND 
						d.d_month_seq = (
											SELECT 
													DISTINCT (d_month_seq) 
											FROM 
													date_dim 
											WHERE 
													d_year BETWEEN n AND i AND 
													d_moy = mon) AND 
						i.i_current_price > ratio * (
														SELECT 
																avg(j.i_current_price) 
														FROM 
																item j 
														WHERE j.i_category = i.i_category) 
				GROUP BY 
						a.ca_state 
				HAVING 
						count(*) >= min 
				ORDER BY 
						cnt, 
						a.ca_state);
		i = i + 1;
	
	END WHILE;
	
	SELECT 
			count(*) 
	FROM 
			v_t;
END;